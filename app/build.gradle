import cn.hwj.buildplugin.*//import cn.hwj.buildplugin.*  注意插件会报无引用

android {
    compileSdk BuildManager.compileSdkVersion

    defaultConfig {
        applicationId "cn.hwj.composing"
        minSdk BuildManager.minSdkVersion
        targetSdk BuildManager.targetSdkVersion
        versionCode BuildManager.versionCode
        versionName BuildManager.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk { //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
//            abiFilters "armeabi", "armeabi-v7a"//, "arm64-v8a", "x86", "arm64-v8a", "x86_64"
            abiFilters "armeabi-v7a"//, "arm64-v8a", "x86", "arm64-v8a", "x86_64"

        }
    }
    //指定打包后应用名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "app_${buildType.name}_${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"

        }
    }
    // 签名设置
    signingConfigs {
        myConfig {
            storeFile file("./gree_pad_app.jks")
            storePassword "123456"
            keyAlias "gree"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            minifyEnabled false     //是否开启混淆，移除未使用代码
            debuggable true         //true代表日志输出
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
            buildConfigField "boolean", "IS_DEBUG", "false"
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
            buildConfigField "boolean", "IS_DEBUG", "true"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':core')
    if (DepManager.isDebug) {
        implementation project(':route')
    } else {
        implementation project(':login')
        implementation project(':search')
    }
    implementation DepManager.routerCore

}